<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr" xml:lang="fr">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="/css/main.css" />
    <script type="text/javascript" src="/js/jquery-1.3.1.min.js"></script>
    <script type="text/javascript" src="/js/jquery.cookie.js"></script>
    <script type="text/javascript" src="/js/index.js"></script>
    <!--[if IE]><script type="text/javascript" src="js/flot/excanvas.min.js"></script><![endif]-->
    <script type="text/javascript" src="/js/flot/jquery.flot.min.js"></script>
    <title>GridPocket Energy Monitor</title>
    <script>
        function getUrlVars()
        {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for(var i = 0; i < hashes.length; i++)
            {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }

        Date.prototype.setISO8601 = function (string) {
            var regexp = "([0-9]{4})(-([0-9]{2})(-([0-9]{2})" +
            "(T([0-9]{2}):([0-9]{2})(:([0-9]{2})(\.([0-9]+))?)?" +
            "(Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?";
            var d = string.match(new RegExp(regexp));

            var offset = 0;
            var date = new Date(d[1], 0, 1);

            if (d[3]) { date.setMonth(d[3] - 1); }
            if (d[5]) { date.setDate(d[5]); }
            if (d[7]) { date.setHours(d[7]); }
            if (d[8]) { date.setMinutes(d[8]); }
            if (d[10]) { date.setSeconds(d[10]); }
            if (d[12]) { date.setMilliseconds(Number("0." + d[12]) * 1000); }
            if (d[14]) {
                offset = (Number(d[16]) * 60) + Number(d[17]);
                offset *= ((d[15] == '-') ? 1 : -1);
            }

            offset -= date.getTimezoneOffset();
            time = (Number(date) + (offset * 60 * 1000));
            this.setTime(Number(time));
        }

        function draw_graphic( data ) {
            // draw something inside $('#graph')
            var from=new Date();
            var to=new Date();
            from.setISO8601(data["from"]);
            to.setISO8601(data["to"]);
            var datatabs=new Array();
            var interval=data["interval"];
            $.each(data["data"],function(index, value) {
                if (index) {
                    datatabs[index]=[ from.getTime() + (index*interval*1000), value ];
                }
            });
            $.plot($('#graph'), [ datatabs ], { xaxis: {
                    mode: "time",
                    min: from.getTime(),
                    max: to.getTime()
                },
                yaxis: { min: 0, max: 3000 } });
        }

        function getUserNameFromURI() {
            var tmp=new String( window.location );
            return tmp.replace( /^.*\/([^/]*)\?.*$/, "$1");
        }

        var now=new Date
        var one_day_ago=new Date((new Date).getTime() - 24 * 3600000)
        $(document).ready(function(){
            var params = getUrlVars();
            var username=getUserNameFromURI();
            var login=params['l'];
            var password=params['p'];
            var prefix_url='/users/'+username+'/sensors';
            var login_param = { "l": login, "p" : password };

            $.getJSON(prefix_url+'.json', 
                login_param , 
                function(json){
                    // only for first sensor
                    sensor=json[0]["sensor_hr"];
                    var last_measure_param = { "l": login, "p" : password };
                    var last_day_measure_param = { "l": login, "p" : password, "from" : one_day_ago.toString(), "to": now.toString(), interval: 1800 };
                $.getJSON(prefix_url+'/'+sensor+'/measures.json', last_day_measure_param, function(measure) {
                    draw_graphic( measure );
                });
                $.getJSON(prefix_url+'/'+sensor+'/measures.json', last_measure_param, function(measure) {
                        var len=measure["data"].length;
                        var last=measure["data"][len-1];
                        var cons=last["consumption"]
                        var KWH_COST=0.082;
                        var HOURLY_COST_MULTI = 0.001;
                        var DAILY_COST_MULTI = 0.024;
                        var MONTHLY_COST_MULTI = 0.720;
                        $('#instantconsumptionvalue').html( cons + ' Watts' );
                        $('#instanthourlycostvalue').html( (cons * KWH_COST * HOURLY_COST_MULTI).toFixed(2) + " €");
                        $('#instantdailycostvalue').html( (cons * KWH_COST * DAILY_COST_MULTI).toFixed(2) + " €");
                        $('#instantmonthlycostvalue').html( (cons * KWH_COST * MONTHLY_COST_MULTI).toFixed(2) + " €");
                    });
            });
        });

    </script>
    <style>
        #graph {
           width: 45em; 
           height: 25em; 
           text-align: center;
           margin-left: auto;
           margin-right: auto;
        }
    </style>
</head>
<body>
    <div id="entete">
        <div id="logo">
            <img src="/img/GridPocketBlueLogo.jpg" alt="Grid Pocket Logo" width="250px" />
        </div>
        <div id="titles">
            <h1>GridPocket Energy Monitor</h1>
        </div>
        <div class="flush"></div>
    </div>

    <div id="content" width="600px" height="300px">
        <% if not @object[:nickname].nil? %>
        <div id="username">
        User name: <strong><%= @object[:nickname] %></strong>
        </div>
        <div id="instantconsumption">
            Instant power consumption: <strong><span id="instantconsumptionvalue">loading...</span></strong>
        </div>
        <div id="costs">
            <h4> Energy cost estimations </h4>
            <table>
                <tr>
                    <th>Instant hourly cost</th>
                    <td> <span id="instanthourlycostvalue">loading...</span></td>
                </tr>
                <tr>
                    <th>Instant daily cost</th> 
                    <td><span id="instantdailycostvalue">loading...</span></td>
                </tr>
                <tr>
                    <th>Instant monthly cost</th> 
                    <td><span id="instantmonthlycostvalue">loading...</span></td>
                </tr>
            </table>
        </div>
        <div id="message">
            Utility message: <strong><%= @object[:status] %></strong>
        </div>
        <div id="graphinfo">Last 24 hours energy consumption</div>
        <div id="graph"> Please wait while loading data...</div>
        <% end %>
    </div>

    <div id="bottom">
        <div id="menu">
            <a href="/accounts/<%=@object[:nickname]%>?l=<%=@request[:l]%>&p=<%=@request[:p]%>">Account settings</a>
        </div>
    <div id="gprefs">
    2009 GridPocket© SAS All Rights Reserved
    </div>
    </div>
</body>
</html>
